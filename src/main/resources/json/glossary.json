{
  "terms": {
    "Проект для ВКР": "Серверное веб-приложение, выполняющее задачи учёта для предприятия по хранению, анализу качества и обработке зерновых культур",
    "Элеваторные предприятия": "Тип агропромышленных предприятий, специализирующихся на подработке от зерновых и сорных примесей и хранении зерновых культур",
    "Визитёрская": "Пункт приёмки грузового транспорта с зерновой культурой заказчика услуг",
    "Лаборатория": "Отделение, отвечающее за анализ качества зерновой пробы",
    "Весовая": "Сооружение, в котором производятся замеры масс поступившей культуры заказчика",
    "Зерновой ток": "Конструкция, предназначенная для временного краткосрочного хранения зерна перед его поступлением на обработку и сушку",
    "Зерноочистительный-сушильный комплекс (ЗСК)": "Система механизмов, выполняющих задачи по подработке зерновых культур от сорных и зерновых примесей и сушки",
    "Зернохранилище": "Склады для длительного хранения очищенного зерна",
    "Учётная информация": "Вид информации, отражающий хозяйственную деятельность, характеризующий процессы производственно-хозяйственной и финансовой деятельности на различных стадиях",
    "Налоговый учёт": "Формирует данные, необходимое для правильных исчислений налоговых обязательств субъекта. Выражается в денежном измерителе",
    "Бухгалтерский учёт": "Учёт, в задачи которого входит регистрация, наблюдение, сбор и итоговая группировка всей информации о функционировании субъекта для принятия дальнейших финансово хозяйственных решений",
    "Статистический учёт": "Представляет собой сбор данных о текущих тенденциях в социальных, демографических и экономических явлениях и процессах",
    "Оперативный учёт": "Учёт, рассчитанный на самую актуальную информацию для текущего контроля за процессами и их управлением. Характерной чертой для данного вида учёта является быстрота получения данных, позволяющие принимать решения чуть ли не в момент их получения",
    "Управленческий учёт": "Представляет собой систему формирования информации, используемая начальством разных уровней вертикали для принятия решений касаемой дальнейшей деятельности субъекта",
    "Финансовый учёт": "Подразумевает под собой сбор информации о имущественном и финансовом положении субъекта",
    "Веб-приложение": "Клиент-серверное приложение, в котором клиент взаимодействует с веб-сервером при помощи браузера",
    "Архитектура веб-приложений": "План одновременных взаимодействий между компонентами, базами данных, промежуточными системами, пользовательскими интерфейсами и серверами в приложении",
    "Монолитная архитектура": "Классический подход к организации дизайна серверного приложения, представляет собой только один сервис, содержащий в себе всю бизнес-логику приложения, предоставляя всего одну точку входа. Данная разновидность дизайна неплохо себя показывает при разработке небольших приложений с малым количеством бизнес-логики",
    "Микросервисная архитектура": "Подход к организации дизайна серверного приложения, подразумевающий разделение серверного приложения на отдельные сервисы, отвечающие за определённую часть бизнес-логики. Каждый сервис независимо от других развёртывается, масштабируется и тестируется, что значительно упрощает их обслуживание и командную разработку",
    "Веб-сервер": "Сервер, принимающий HTTP-запросы от клиентов, обычно веб-браузеров, и выдающий им HTTP-ответы, как правило, вместе с HTML-страницей, изображением, файлом, медиа-потоком или другими данными",
    "Язык программирования": "Формальный язык, предназначенный для записи компьютерных программ. Язык программирования определяет набор лексических, синтаксических и семантических правил, определяющих внешний вид программы и действия, которые выполнит исполнитель (обычно — ЭВМ) под её управлением",
    "Golang (Go)": "Язык программирования, определяемый спецификациями, которые можно разработать в любом компиляторе. Ядром данной архитектуры является непосредственно сам язык программирования Go, то есть его семантика, синтаксис и алфавит. Второй слой содержит в себе инструменты для поддержки разработки приложений, включающий в себя средства для документирования, тестирования и форматирования. Внешний слой представляет собой экосистему языка Go, выполняющая задачу поддержки самого Go-приложения. В данный слой входят такие инструменты как система контроля исходного кода, а также встроенный менеджер пакетов",
    "Java": "Объектно-ориентированный и компилируемый язык программирования со строгой типизацией, созданный компанией Sun Microsystem и выпустившей его в общественное пользование в 1995 году. В процессе проектирования разработчики вдохновлялись возможностями языков C и C++, а также брался во внимание в то время актуальный тренд программирования – объектно-ориентированный подход к разработке программных продуктов. Java создавался как универсальный язык программирования, обладающим таким спектром функциональных возможностей, с помощью которого можно было бы написать программный продукт с ориентиром на любую задачу и для любой платформы",
    "Spring Framework": "Проект с открытым исходным кодом, призванный облегчить разработку корпоративных приложений на языке Java. Успех Spring заключался в реализации принципа инверсии контроля путём внедрения зависимостей с помощью такого инструмента как Inversion of Control Container (контейнер для внедрения зависимостей, IoC). Суть данного принципа заключается в делегации обязанностей по инициализации и настройке объектов с него самого на специальные компоненты, предназначенные для этой задачи",
    "Базы данных": "Набор логически связанных данных, удовлетворяющие информационные потребности пользователя",
    "Реляционные базы данных": "Подразумевают представление сущностей в виде таблиц, для которых характерны строгая структуризация и связь между собой. Таблицы состоят из столбцов и строк, где каждый столбец – это атрибут сущности, а строка – отдельная запись в базе. Запросы на чтение, обновление, создание и удаление записей в базах данных реляционного типа производится на языке запросов SQL",
    "Нереляционные базы данных": "Модель данных, не удовлетворяющая свойствам, присущим реляционной модели. Базы данных такого типа для хранения информации могут не использовать таблицы в качестве структур и иметь менее чёткие связи по сравнению с реляционным подходом. Базы данных нереляционного типа также называются NoSQL, а язык запросов напрямую зависит от типа нереляционной модели",
    "Система управления базой данных (СУБД)": "Комплекс программных средств, позволяющих контролировать базы данных"
  }
}
